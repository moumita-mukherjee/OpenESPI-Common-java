/*
 * Copyright 2013 EnergyOS.org
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.27 at 01:43:57 PM EDT 
//


package org.energyos.espi.common.domain;

import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Embedded;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import org.energyos.espi.common.domain.UsagePoint;
import org.energyos.espi.common.models.atom.adapters.CustomerAdapter;



@XmlRootElement(name="ServiceLocation", namespace="http://naesb.org/espi/cust")
@XmlJavaTypeAdapter(CustomerAdapter.class)
@SuppressWarnings("serial")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ServiceLocation")
@Entity
@Table(name = "service_location")
@NamedQueries(value = {
        @NamedQuery(name = ServiceLocation.QUERY_FIND_ALL_IDS,
                query = "SELECT serviceLocation.id FROM ServiceLocation serviceLocation"),		
        @NamedQuery(name = ServiceLocation.QUERY_FIND_BY_ID, 
        		query = "SELECT serviceLocation FROM ServiceLocation serviceLocation WHERE serviceLocation.id = :id"),
       @NamedQuery(name = ServiceLocation.QUERY_FIND_BY_CUSTOMER_ID_CUSTOMER_ACCOUNT_ID_CUSTOMER_AGREEMENT_ID, 
         		query = "SELECT serviceLocation FROM ServiceLocation serviceLocation WHERE serviceLocation.customerAgreement.customerAccount.customer.id = :customerId and serviceLocation.customerAgreement.customerAccount.id =:customerAccountId and serviceLocation.customerAgreement.id =:customerAgreementId"),
              
})  
public class ServiceLocation extends IdentifiedObject 
        {

    public static final String QUERY_FIND_ALL_IDS = "ServiceLocation.findAllIds";
    public static final String QUERY_FIND_BY_ID = "ServiceLocation.findById";
    public static final String QUERY_FIND_BY_CUSTOMER_ID_CUSTOMER_ACCOUNT_ID_CUSTOMER_AGREEMENT_ID = "ServiceLocation.findByCustomerIdCustomerAccountIdCustomerAgreementId";
    
    @Column(name = "name")
    protected String name;    
    
    @Column(name = "type")
    protected String type; 
    
    @Column(name = "enabled")
    protected boolean enabled; 
    
    @XmlTransient
    @Column(name = "usage_point_ref")
    protected Long usagePointRef; 
    
    @Embedded
    @Transient
    protected UsagePoints usagePoints; 
    
   /* @Column(name = "usagePointId")
    protected long usagePointId;*/
    
   
     public boolean isEnabled() {
 	return enabled;
 }


 public void setEnabled(boolean enabled) {
 	this.enabled = enabled;
 }
    
   /* @Embedded
  	protected Status status;*/
    
    
    @XmlTransient
    @Transient
    private String link;
  
    @XmlTransient
   	@ManyToOne(fetch=FetchType.EAGER)
   	@JoinColumn(name = "customer_agreement_id")
   	private CustomerAgreement customerAgreement;
    
    
    public String getLink() {
		return this.customerAgreement.getLink()+"/CustomerAgreement/"+this.customerAgreement.getId();
	}




	public void setLink(Long customerId, Long accountId, Long agreementId) {
		this.link = "/Customer/"+customerId+"/CustomerAccount/"+accountId+"/CustomerAgreement/"+agreementId;
	}




	public ServiceLocation() {
		super();
		//
		//this.usagePoint = new UsagePoint();
	}
    
    
    
    
    public String getName() {
		return name;
	}



	public void setName(String name) {
		this.name = name;
	}



	public String getType() {
		return type;
	}





	public void setType(String type) {
		this.type = type;
	}


	public CustomerAgreement getCustomerAgreement() {
        return customerAgreement;
    }

    public void setCustomerAgreement(CustomerAgreement customerAgreement) {
        this.customerAgreement = customerAgreement;
    }
    
    
    @XmlTransient
	@OneToMany(fetch = FetchType.EAGER, mappedBy= "serviceLocation" ,cascade = CascadeType.REMOVE)
    private Set<EndDevice> endDevices;
    

   /* @Transient
    private UsagePoint usagePoint = new UsagePoint() ;*/
   
	
    
   
	public Set<EndDevice> getEndDevices() {
		return endDevices;
	}


	public void setEndDevices(Set<EndDevice> endDevices) {
		this.endDevices = endDevices;
	}

  

	/*public UsagePoint getUsagePoint() {
		return usagePoint;
	}



	public void setUsagePoint(UsagePoint usagePoint) {
		this.usagePoint = usagePoint;
	}*/




	@Override
	public String toString() {
		return "ServiceLocation [name=" + name + "]";
	}


	public Long getUsagePointRef() {
		return usagePointRef;
	}


	public void setUsagePointRef(Long usagePointRef) {
		this.usagePointRef = usagePointRef;
	}




	public UsagePoints getUsagePoints() {
		return usagePoints;
	}


	public void setUsagePoints(UsagePoints usagePoints) {
		this.usagePoints = usagePoints;
	}

    
}
